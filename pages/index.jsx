import Head from "next/head";
import React from "react";

export default function Home() {
  const [data, setData] = React.useState(false);
  const [edit, setEdit] = React.useState(false);

  React.useEffect(() => {
    fetch(window.origin + "/api/notes")
      .then((res) => res.json())
      .then((data) => setData(data));
  }, []);

  const submit = (e) => {
    e.preventDefault();

    const url = window.origin + "/api/add";

    fetch(url, {
      method: "POST",
      headers: {
        "Content-type": "application/json",
      },
      body: JSON.stringify({
        title: e.target[0].value,
        text: e.target[1].value,
      }),
    })
      .then((res) => res.json())
      .then((data) => console.log(data))
      .catch((err) => console.log(err));

    fetch(window.origin + "/api/notes")
      .then((res) => res.json())
      .then((data) => setData(data));
  };

  const editFunc = (e) => {
    e.preventDefault();

    fetch(window.origin + "/api/edit", {
      method: "POST",
      headers: {
        "Content-type": "application/json",
      },
      body: JSON.stringify({
        title: e.target[0].value,
        text: e.target[1].value,
        id: edit,
      }),
    })
      .then((res) => res.json())
      .then((data) => console.log(data));
    e.target[0].value = "";
    e.target[1].value = "";
    setEdit(false);
    fetch(window.origin + "/api/notes")
      .then((res) => res.json())
      .then((data) => setData(data));
  };

  const deleteFunc = (id) => {
    fetch(window.origin + "/api/delete", {
      method: "POST",
      headers: {
        "Content-type": "application/json",
      },
      body: JSON.stringify({ id: id }),
    });
    fetch(window.origin + "/api/notes")
      .then((res) => res.json())
      .then((data) => setData(data));
  };

  const url = global.origin

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="backend">
          <a href={url + "/api/notes"}>All notes GET request</a>
          <a href={url + "/api/edit"}>Edit notes POST request</a>
          <a href={url + "/api/delete"}>Delete notes POST request</a>
          <a href={url + "/api/add"}>Add notes POST request</a>
        </div>

        {edit ? (
          <form onSubmit={(e) => editFunc(e)}>
            <input placeholder="Title" className="inputs" type="text" />
            <input placeholder="Text" className="inputs" type="text" />
            <button className="button" stype="submit">
              Sent note
            </button>
          </form>
        ) : (
          <form onSubmit={(e) => submit(e)}>
            <input placeholder="Title" className="inputs" type="text" />
            <input placeholder="Text" className="inputs" type="text" />
            <button className="button" stype="submit">
              Sent note
            </button>
          </form>
        )}
        {edit ? (
          ""
        ) : (
          <ul className="box">
            {data
              ? data?.map((el) => (
                  <li>
                    <h2>{el.title}</h2>
                    <br />
                    <p>{el.title}</p>

                    <button
                      onClick={() => setEdit(el.id)}
                      className="note-edit"
                    >
                      Edit
                    </button>
                    <button
                      onClick={() => deleteFunc(el.id)}
                      className="note-delete"
                    >
                      Delete
                    </button>
                  </li>
                ))
              : ""}
          </ul>
        )}
      </main>
    </>
  );
}
